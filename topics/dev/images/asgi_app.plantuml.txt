@startuml

!include plantuml_options.txt
participant Browser
participant "ASGI Server"
participant FastAPI
participant Starlette
participant Middleware
participant router

participant Controller
participant Service
participant Manager

note over "ASGI Server", router: Framework
note over Controller, Manager: Galaxy Backend

Browser -> "ASGI Server": TCP/IP Request
activate "ASGI Server"
note left of Browser: Static content\nCSS, JS, Image
"ASGI Server" --> Browser
deactivate "ASGI Server"

Browser -> "ASGI Server": TCP/IP Request
activate "ASGI Server"
"ASGI Server" -> FastAPI: asgi args
activate FastAPI

FastAPI -> Starlette: asgi args
activate Starlette

Starlette -> Middleware: asgi args
activate Middleware

Middleware -> router: asgi args
activate router

router -> Controller: pydantic
activate Controller
Controller -> Service: pydantic
activate Service
Service -> Manager: pydantic
activate Manager

note left of Browser: API Request
note right of Manager: Vanilla Python function calls.\nUse application components\nto perform "business logic"

Manager --> Service: pydantic
deactivate Manager

Service --> Controller: pydantic
deactivate Service

Controller --> router: pydantic
deactivate Controller

router --> Middleware:
deactivate router

Middleware --> Starlette
deactivate Middleware

Starlette --> FastAPI
deactivate Starlette

FastAPI --> "ASGI Server"
deactivate FastAPI

"ASGI Server" --> Browser
deactivate "ASGI Server"

@enduml
