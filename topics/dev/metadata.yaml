---
name: "dev"
type: "admin-dev"
title: "Development in Galaxy"
summary: "Galaxy is an open-source project. Everyone can contribute to its development with core Galaxy development, integration of softwares in Galaxy environment, ..."
docker_image:
requirements:
material:
  -
    title: "Galaxy from a developer point of view"
    type: "introduction"
    name: "introduction"
    slides: yes
    contributors:
      - bebatut
  -
    title: "Tool development and integration into Galaxy"
    type: "tutorial"
    name: "tool-integration"
    hands_on: "external"
    hands_on_url: "http://planemo.readthedocs.io/en/latest/writing_standalone.html"
    slides: "yes"
    questions:
      - "What is a tool for Galaxy?"
      - "How to build a tool/wrapper with the good practices?"
      - "How to deal with the tool environment?"
    objectives:
      - "Discover what is a wrapper and its structure"
      - "Use the Planemo utilities to develop a good wrapper"
      - "Deal with the dependencies"
      - "Write functional tests"
      - "Make a tool ready for publishing in a ToolShed"
    time_estimation: "6h"
    key_points:
      - "Galaxy Tool Syntax"
      - "Use Planemo"
      - "Use Conda"
      - "Use GitHub"
      - "Use Travis"
      - "No more excuse to develop crappy Galaxy tools"
    contributors:
      - shiltemann
      - bebatut
      - abretaud
      - jmchilton
      - nsoranzo
      - bgruening
      - lecorguille
  -
    title: "Tool Shed: sharing Galaxy tools"
    type: "tutorial"
    name: "toolshed"
    hands_on: no
    slides: yes
    questions:
      - "What is a Tool Shed?"
      - "How to install tools and workflows from a Tool Shed into a Galaxy instance?"
      - "What are the Tool Shed repository types?"
      - "How to publish with Planemo?"
    objectives:
      - "Discover what is a Tool Shed"
      - "Be able to install tools and workflows from a Tool Shed into a Galaxy instance"
      - "Be able to publish tools with Planemo"
    time_estimation: "3h"
    key_points:
      - "Use Planemo"
      - "Contribute to the Main Tool Shed"
    contributors:
      - abretaud
      - loraine-gueguen
      - slegras
      - bebatut
  -
    title: "Galaxy Interactive Tours"
    type: "tutorial"
    name: "interactive-tours"
    hands_on: no
    slides: yes
    questions:
      - "What is a Galaxy Interactive Tour?"
      - "How to create a Galaxy Interactive Tour?"
    objectives:
      - "Discover what is a Galaxy Interactive Tour"
      - "Be able to create a Galaxy Interactive Tour"
      - "Be able to add a Galaxy Interactive Tour in a Galaxy instance"
    time_estimation: "3h"
    key_points:
      - "An Interactive Tour is easy to create: just a yaml file to fill"
      - "Use the Developper Tools of find the JQuery Selector"
      - "Help yourself by using the available web plugins and record an interactive tour"
    contributors:
      - bebatut
      - bgruening
  -
    title: "Galaxy Interactive Environments"
    type: "tutorial"
    name: "interactive-environments"
    hands_on: no
    slides: yes
    questions:
      - "What are Galaxy Interactive Environments (GIEs)?"
      - "How to enable GIEs in Galaxy?"
      - "How to develop your own GIE?"
    objectives:
      - "Implement a Hello-World Galaxy Interactive Environment"
    requirements:
      -
        title: "Docker basics"
        type: "external"
        link: ""
    time_estimation: "1.5h"
    key_points:
      - "Interactive Environments offer access to third-party applications within Galaxy"
      - "Interactive Environments run in a docker images for sandboxing and easy dependency management"
    contributors:
      - shiltemann
      - bgruening
      - erasche
  -
    title: "Visualizations: charts plugins"
    type: "tutorial"
    name: "visualization-charts"
    hands_on: yes
    slides: yes
    questions:
      - "How can I make a custom plugin for Charts?"
    objectives:
      - "Learn how to add custom javascript plugins to the Galaxy Charts framework"
    time_estimation: "1h"
    key_points:
      - "Charts is a pluggable extension system for JS-only visualisations"
      - "With only 3 files we can integrate any JS-only visualizations into Galaxy"
    contributors:
      - shiltemann
      - yhoogstrate
      - bgruening
      - guerler
  -
    title: "Galaxy Webhooks"
    type: "tutorial"
    name: "webhooks"
    hands_on: yes
    slides: yes
    questions:
      - "What are Galaxy Webhooks?"
      - "How to create them?"
    objectives:
      - "Discover what Galaxy Webhooks are"
      - "Be able to create Webhooks"
      - "Be able to add a Galaxy Webhook in a Galaxy instance"
    time_estimation: "1h"
    key_points:
      - "A Galaxy Webhook provides an easy way to customize the Galaxy UI with plugins"
      - "Right now there are 4 entry points: tool, workflow, masthead, history-menu"
      - "With a minimal amount of code you can extend Galaxy's user-interace."
    contributors:
      - blankclemens
      - martenson
      - bgruening
  -
    title: "Visualizations: generic plugins"
    type: "tutorial"
    name: "visualization-generic"
    hands_on: yes
    slides: yes
    questions:
      - "How can visualization plugins benefit science?"
    objectives:
      - "Implement a first Galaxy visualization"
      - "Understand the client side vs. server side principle"
    requirements:
      -
        title: "Javascript knowledge"
        type: "external"
        link: ""
    time_estimation: "1.5h"
    key_points:
      - "Visualizations require a different way of thinking: server and client side; downloading files rather than system level access"
      - "Interactivity is what makes visualizations different from static tools"
      - "Requires understanding of both the Galaxy ecosystem as well as HTML5/JS"
      - "Performance is more important than for static Galaxy tools"
    contributors:
      - shiltemann
      - yhoogstrate
  -
    title: "BioBlend module, a Python library to use Galaxy API"
    type: "tutorial"
    name: "bioblend-api"
    hands_on: no
    slides: yes
    questions:
      - "What is the use of BioBlend?"
      - "How to use Galaxy through command line?"
    objectives:
      - "Get familiar with BioBlend using IPython"
      - "Launch a Galaxy job / Visualize your actions with Galaxy"
      - "Launch a Galaxy workflow / Visualize your actions with Galaxy"
    requirements:
      -
        title: "IPython"
        type: "external"
        link: "https://ipython.org"
    time_estimation: "2h"
    key_points:
      - "Play with IPython"
      - "Understand the job launching in Galaxy with BioBlend"
      - "Understand the workflow launching in Galaxy with BioBlend"
      - "Be able to adapt this knowledge to personal workflows"
    contributors:
      - odoppelt
      - fmareuil

  -
    title: "Prerequisites for building software/conda packages"
    type: "tutorial"
    name: "conda_sys"
    hands_on: no
    slides: yes
    questions:
      - "What does 'installing a software' means on a Linux architecture?"
      - "Why my compilations always fail?"
      - "How to solve common compiling and installation issues?"
    objectives:
      - "Learn how to compile and install tools using standard procedures."
      - "Learn needed tricks to write conda build.sh files."
    time_estimation: "1h"
    key_points:
      - "There is a common procedure to compile and install many tools: `./configure && make && make install`"
      - "Some exotic tools require adjustements to compile or install properly"
      - "Pay attention to INSTALL and README files, and to documentation"
    contributors:
      - abretaud
      - cmonjeau

  -
    title: "Tool Dependencies and Conda"
    type: "tutorial"
    name: "conda"
    hands_on: "external"
    hands_on_url: "http://planemo.readthedocs.io/en/latest/writing_standalone.html"
    slides: yes
    questions:
      - "How can I connect tools to applications and libraries?"
      - "What are the advantages of declaring dependencies for my tool?"
      - "What are Conda and Bioconda?"
      - "What are Conda recipes and environments?"
      - "How do I find and use existing Conda recipes?"
      - "How do I develop Conda recipes for use within Galaxy tools?"
    objectives:
      - "Learn to use existing Conda recipes to enable best practice tool dependency management in Galaxy."
      - "Learn the basics of building Conda recipes and contributing to Bioconda."
      - "Learn to use Planemo to assist in developing Galaxy tools from existing and new Conda recipes."
    time_estimation: "1.25h"
    requirements:
      -
        title: "Tool development and integration into Galaxy"
        type: "internal"
        link: "/topics/dev/tutorials/tool-integration/slides.html"
      -
        title: "Prerequisites for building software/conda packages"
        type: "internal"
        link: "/topics/dev/tutorials/conda_sys/slides.html"
    key_points:
      - "Conda and Bioconda are Galaxy best practices for connecting Galaxy tools to underlying applications and libraries."
      - "Leveraging Conda allows easy installation of your tool's dependencies by Galaxy deployers."
      - "The Planemo commands `conda_search`, `conda_init`, `conda_install`, `lint`, `test`, and `serve` make it easy to search and use existing Conda recipes when developing tools."
      - "Conda recipe skeletons, `conda build`, and with `planemo conda_install --conda_use_local` allow easy development of new Conda recipes at the same time as Galaxy tools that wrap them."
      - "Bioconda is a Galaxy best practice Conda channel for recipe publication."
      - "Bioconda has easy to follow contribution guidelines and is very welcoming to new contributors."
    contributors:
      - nsoranzo
      - jmchilton
      - bgruening
      - hmenager

  -
    title: "Tool Dependencies and Containers"
    type: "tutorial"
    name: "containers"
    hands_on: "external"
    hands_on_url: "http://planemo.readthedocs.io/en/latest/writing_standalone.html"
    slides: yes
    questions:
      - "What are the advantages of running my Galaxy tool inside of a container?"
      - "How does Galaxy find a container to run my tool in?"
      - "What are BioContainers and how are they related to Galaxy?"
    objectives:
      - "Explore the differences between containerizing Galaxy and tool execution."
      - "Discuss the advantages of containerizing tools."
      - "Learn to build best practice tools ready to be containerized."
    time_estimation: "45m"
    requirements:
      -
        title: "Tool development and integration into Galaxy"
        type: "internal"
        link: "/topics/dev/tutorials/tool-integration/slides.html"
    key_points:
      - "It is becoming easier, more advantageous, and more common for Galaxy admins to run all tools within their own container."
      - "You can explicitly define a container for your tool - but it is easier and more reproducible to let Galaxy find or build one using your tool's best practice requirements."
      - "The Galaxy community will infrastructure to automatically build and/or publish containers for your tool as long as it defines best practice Conda dependencies."
      - "Planemo makes it easy to test your tool inside of containers."
    contributors:
      - jmchilton
      - bgruening
  -
    title: "Galaxy Code Architecture"
    type: "tutorial"
    name: "architecture"
    slides: yes
    questions:
      - "How is the Galaxy code structured?"
      - "What do the various other projects related to Galaxy do?"
      - "What happens when I start Galaxy?"
    objectives:
      - "Explore various aspects of the Galaxy codebase."
      - "Understand the various top-level files and modules in Galaxy."
      - "Understand how dependencies work in Galaxy's frontend and backend."
    time_estimation: "2.5h"
    requirements:
    key_points:
      - "Galaxy runs out of the box and fetches all needed dependencies."
      - "Running Galaxy in production requires work configuration."
      - "The architecture is designed to be pluggable and extendable."
      - "Learn more about different Galaxy aspects in our [development section](/topics/dev/)."
    contributors:
      - jmchilton
      - bgruening"
  -
    title: "Data source integration"
    type: "tutorial"
    name: "data-source-integration"
    enable: "false"
    hands_on: yes
    slides: no
    questions:
    objectives:
    time_estimation: "1h/1d"
    key_points:

maintainers:
  - lecorguille
  - bebatut
